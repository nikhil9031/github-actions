name: ecs-build

on: push
                                              
jobs:
  build-deploy-dev:
    name: building & pushing to Dev
    runs-on: ubuntu-latest    

    environment:
      name: Dev
      url: https://dev.app   

    env:               
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # Repo name
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
      AUD: '${{ secrets.AUDIENCE }}'
      
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE_ARN }}
        aws-region: ap-south-1
        audience: ${{ env.AUD }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
   

  build-deploy-prod:
    name: building & pushing to Prod
    runs-on: ubuntu-latest  
    needs: [build-deploy-dev]  

    environment:
      name: Prod
      url: https://prod.app   

    env:               
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} # Repo name
      ROLE_ARN: ${{ secrets.ROLE_ARN }}
      AUDIENCE: ${{ secrets.AUDIENCE }}

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE_ARN }}
        aws-region: ap-south-1
        audience: ${{ secrets.AUDIENCE }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG